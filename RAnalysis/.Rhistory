gapminder
unique(gapminder$year)
gapminder
unique(gapminder$year) # only
# "country"   "continent" "year"      "lifeExp"   "pop"       "gdpPercap"
# interesting variables are the life expentancy and the gross domestic product, population and life expantancy by year
# Ideas:
# teacher_student_ratio
teacher_student_ratio
colnames(gapminder)
colnames(teacher_student_ratio) # view the column names
# does not appear that we will need these columns - lets simplify the data
teacher_student_ratio <- teacher_student_ratio %>% select(-edulit_ind, -country_code, -flag_codes, -flags)
teacher_student_ratio # now our data focuses on the ed-level character, country, year, and stuent ratio
gapminder
teacher_student_ratio
unique(gapminder$year)
unique(teacher_student_ratio$year)
gapminder
# interesting variables are the life expentancy and the gross domestic product, population and life expantancy by year
ggplot(gapminder, aes(gdpPercap, lifeExp, color = continent)) +
facet_wrap(~year) +
geom_point()
# interesting variables are the life expentancy and the gross domestic product, population and life expantancy by year
GDP_lifeEXP <- ggplot(gapminder, aes(gdpPercap, lifeExp, color = continent)) +
facet_wrap(~year) +
geom_point()
GDP_lifeEXP # view plot - this is sad...
GDP_lifeEXP # view plot - basically shows revenue = more life. Sad truth of our world..
GDP_lifeEXP # view plot - basically shows revenue = longevity. Sad truth of our world..
# miinimla life expantancy in Africa has increased wuth time but not in product/gov't income. advance in medicinal care?
# life expantancy has increased for all continents and shows we are hitting a capacity in which $$ does not make a difference for our species
# teacher_student_ratio
teacher_student_ratio
# miinimla life expantancy in Africa has increased wuth time but not in product/gov't income. advance in medicinal care?
# life expantancy has increased for all continents and shows we are hitting a capacity in which $$ does not make a difference for our species
GDP_POP <- ggplot(gapminder, aes(gdpPercap, population, color = continent)) +
facet_wrap(~year) +
geom_point()
GDP_POP # view plot
GDP_POP <- ggplot(gapminder, aes(gdpPercap, population, color = continent)) +
facet_wrap(~year) +
geom_point()
GDP_POP # view plot
gapminder
GDP_POP <- ggplot(gapminder, aes(gdpPercap, pop, color = continent)) +
facet_wrap(~year) +
geom_point()
GDP_POP # view plot
GDP_POP_mean <-
gapminder %>%
group_by(country, year) %>% # SPLIT these are invisible boxes to be applied next
summarize(pop = mean(pop)) # APPLY + COMBINE calculates the mean for each site_name Ã— year combo
GDP_POP_mean # view our t
GDP_POP_mean <-
gapminder %>%
group_by(country, year) %>%
summarize(pop = mean(pop)) %>%
desc()
GDP_POP_mean # view our t
GDP_POP_mean <-
gapminder %>%
group_by(country) %>%
summarize(pop = mean(pop)) %>%
GDP_POP_mean # view our t
GDP_POP_mean <-
gapminder %>%
group_by(country) %>%
summarize(pop = mean(pop)) %>%
GDP_POP_mean # view our t
GDP_POP_mean <-
gapminder %>%
group_by(country) %>%
summarize(pop = mean(pop))
GDP_POP_mean # view our t
GDP_POP_mean <-
gapminder %>%
group_by(country) %>%
summarize(pop = mean(pop)) %>%
arrange(desc(pop))
GDP_POP_mean #
GDP_POP_mean <-
gapminder %>%
group_by(country, continent) %>%
summarize(pop = mean(pop)) %>%
arrange(desc(pop))
GDP_POP_mean # China and India are
GDP_POP_mean <-
gapminder %>%
group_by(country, continent) %>%
summarize(pop = mean(pop)) %>%
arrange(desc(pop))
GDP_POP_mean # China and India are two outliers in the previous figure
gapminder %>%  filter(country %in% c('China', 'India')
gapminder %>%  filter(country %in% c('China', 'India'))
gapminder %>%  filter(!country %in% c('China', 'India'))
GDP_POP.OM <- gapminder %>%  filter(!country %in% c('China', 'India')) %>%  ggplot(aes(gdpPercap, pop, color = continent)) +
facet_wrap(~year) +
geom_point()
GDP_POP.OM # view plot - two ouliers in Asia with high population and low GDP - which are these?
lifeEXP_POP <- ggplot(gapminder, aes(lifeExp, pop, color = continent)) +
facet_wrap(~year) +
geom_point()
lifeEXP_POP
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
```{r pressure, echo=FALSE}
**Bold**
**Bold**
#**Bold**
#*Itlaics*
#**Bold**
#*Itlaics*
# **Bold**
# *Itlaics*
**Bold**
colnames("")
colnames()
colnames(gapminder)
library(tidyverse)
library(gapminder)
library(lubridate)
teacher_student_research <- read_csv('https://tinyurl.com/student-teacher')
teacher_student_research <- read_csv('https://tinyurl.com/student-teacher')
teacher_student_research # view the dataset
ggplot(gapminder, aes(gdpPercap, lifeExp, color = continent)) +
facet_wrap(~year) +
geom_point()
GDP_lifeEXP
knitr::opts_chunk$set(echo = TRUE)
teacher_student_research <- read_csv('https://tinyurl.com/student-teacher')
teacher_student_research <- read_csv('https://tinyurl.com/student-teacher')
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(gapminder)
library(lubridate)
teacher_student_research <- read_csv('https://tinyurl.com/student-teacher')
teacher_student_research # view the dataset
dir.exists()
knitr::opts_chunk$set(echo = TRUE)
teacher_student_research <- read_csv('https://tinyurl.com/student-teacher')
colnames(gapminder)# "country"   "continent" "year"      "lifeExp"   "pop"       "gdpPercap"
colnames(gapminder)# "country"   "continent" "year"      "lifeExp"   "pop"       "gdpPercap"
teacher_student_research <- read_csv('https://tinyurl.com/student-teacher')
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(gapminder)
library(lubridate)
teacher_student_research <- read_csv('https://tinyurl.com/student-teacher')
teacher_student_research # view the dataset
gapminder # view the dataset
colnames(gapminder)# "country"   "continent" "year"      "lifeExp"   "pop"       "gdpPercap"
unique(gapminder$year)
colnames(teacher_student_research)
unique(teacher_student_research$year)
colnames(teacher_student_research)
unique(teacher_student_research$year)
unique(teacher_student_research$country)
count(teacher_student_research$country)
colnames(teacher_student_research)
unique(teacher_student_research$year)
unique(teacher_student_research$country)
teacher_student_research %>% group_by(country) %>% summarise(COUNT = n())
colnames(teacher_student_research)
unique(teacher_student_research$year)
unique(teacher_student_research$country)
teacher_student_research %>% group_by(continent) %>% summarise(COUNT = n())
colnames(teacher_student_research)
unique(teacher_student_research$year)
unique(teacher_student_research$country)
teacher_student_research %>% group_by(country) %>% summarise(COUNT = n())
colnames(teacher_student_research)
unique(teacher_student_research$year)
unique(teacher_student_research$country)
teacher_student_research %>%  summarise(COUNT = n(country))
View(teacher_student_research)
colnames(gapminder)
unique(gapminder$year)
unique(teacher_student_research$country)
gapminder_NEWEST <- gapminder %>% filter(year == "2007") %>% # select only the 2007 newest data
select("country", "continent", "pop", "gdpPercap")
stud_teach_pop_product <- merge(teacher_student_ratio, gapminder_NEWEST, by = "country")
stud_teach_pop_product <- merge(teacher_student_research, gapminder_NEWEST, by = "country")
stud_teach_pop_product <- merge(teacher_student_research, gapminder_NEWEST, by = "country")
stud_teach_pop_product <- merge(teacher_student_research, gapminder_NEWEST, by = "country")
stud_teach_pop_product
stud_teach_pop_product <- merge(teacher_student_research, gapminder_NEWEST, by = "country") %>%
select!("flag_codes", "flags")
stud_teach_pop_product <- merge(teacher_student_research, gapminder_NEWEST, by = "country")
stud_teach_pop_product <- stud_teach_pop_product %>%  select!("flag_codes", "flags")
stud_teach_pop_product <- merge(teacher_student_research, gapminder_NEWEST, by = "country")
stud_teach_pop_product_2 <- stud_teach_pop_product %>%  filter(!is.na(student_ratio)) %>%
select(-"flags", -"flag_codes", -"country_code")
stud_teach_pop_product
stud_teach_pop_product <- merge(teacher_student_research, gapminder_NEWEST, by = "country")
stud_teach_pop_product_2 <- stud_teach_pop_product %>%  filter(!is.na(student_ratio)) %>%
select(-"flags", -"flag_codes", -"country_code")
stud_teach_pop_product_2
stud_teach_pop_product <- merge(teacher_student_research, gapminder_NEWEST, by = "country")
stud_teach_pop_product_2 <- stud_teach_pop_product %>%  filter(!is.na(student_ratio)) %>%
select(-"flags", -"flag_codes", -"country_code", -"edulit_ind")
stud_teach_pop_product_2
stud_teach_pop_product <- merge(teacher_student_research, gapminder_NEWEST, by = "country")
stud_teach_pop_product_2 <- stud_teach_pop_product %>%  filter(!is.na(student_ratio)) %>%
select(-"flags", -"flag_codes", -"country_code", -"edulit_ind")
head(stud_teach_pop_product_2)
SUMTAB_continent_year_summary <-
stud_teach_pop_product %>%
group_by(year, continent, indicator) %>% # group by the time period and the month
summarize(Av_student_ratio = mean(student_ratio),
Av_pop = mean(pop),
Av_product = mean(gdpPercap))
SUMTAB_continent_year_summary <- map(SUMTAB_continent_year, summary)
SUMTAB_continent_year <-
stud_teach_pop_product %>%
group_by(year, continent, indicator) %>% # group by the time period and the month
summarize(Av_student_ratio = mean(student_ratio),
Av_pop = mean(pop),
Av_product = mean(gdpPercap))
SUMTAB_continent_year_summary <- map(SUMTAB_continent_year, summary)
SUMTAB_continent_year <-
stud_teach_pop_product %>%
group_by(year, continent, indicator) %>% # group by the time period and the month
summarize(Av_student_ratio = mean(student_ratio),
Av_pop = mean(pop),
Av_product = mean(gdpPercap))
SUMTAB_continent_year
SUMTAB_continent_year_summary <- map(SUMTAB_continent_year, summary)
SUMTAB_continent_year_summary
SUMTAB_continent_year <-
stud_teach_pop_product %>%
group_by(indicator, year, continent) %>% # group by the time period and the month
summarize(Av_student_ratio = mean(student_ratio),
Av_pop = mean(pop),
Av_product = mean(gdpPercap))
SUMTAB_continent_year
SUMTAB_continent_year_summary <- map(SUMTAB_continent_year, summary)
SUMTAB_continent_year_summary
SUMTAB_continent_year <-
stud_teach_pop_product_2 %>%
group_by(indicator, year, continent) %>% # group by the time period and the month
summarize(Av_student_ratio = mean(student_ratio),
Av_pop = mean(pop),
Av_product = mean(gdpPercap))
SUMTAB_continent_year
SUMTAB_continent_year_summary <- map(SUMTAB_continent_year, summary)
SUMTAB_continent_year_summary
knitr::opts_chunk$set(
echo = TRUE,
fig.path = "project1figs/",
fig.width = 8,
warning = FALSE)
install.packages("tidyverse")
library(tidyverse)
library(gapminder)
library(gridExtra)
gapminder_data <- gapminder::gapminder
student_teacher_data <- read.csv('https://tinyurl.com/student-teacher')
gapminder_data
student_teacher_data
# Run Primer3
/Users/samjg/software/primer3-2.4.0/src/primer3_core \
--format_output \
--output= Analysis/20200320_geoduck_NADH_primers/20200320_primer3_PGEN_.00g299160_wholegene.txt
\
Analysis/20200320_geoduck_NADH_primers/20200320_NADH_primer3_params.txt
install.packages(EMBOSS)
install.packages(primersearch)
install.packages("reticulate")
## -------------------------------------------------------------------------------------------------
# create a pie chart with slice labels
g<-ggPie(mpg,aes(pies=drv))
##---
# R code for Data Vislization with R
#  Guangyu Zhu
#  guangyuzhu@uri.edu
## -----
library(ggplot2)
library(GGally)
theme_set(theme_bw())
library(magrittr)
library(tidyverse)
library(scales)
library(ggiraph)
library(ggiraphExtra)
library(plotly)
install.packages(GGally)
install.packages('GGally')
library(GGally)
theme_set(theme_bw())
library(magrittr)
library(tidyverse)
library(scales)
library(ggiraph)
install.packages('ggiraph')
library(ggiraphExtra)
library(plotly)
##---
# R code for Data Vislization with R
#  Guangyu Zhu
#  guangyuzhu@uri.edu
## -----
library(ggplot2)
library(GGally)
library(magrittr)
library(tidyverse)
library(scales)
library(ggiraph)
library(ggiraphExtra)
library(plotly)
install.packages('ggiraphExtra')
library(ggiraphExtra)
library(plotly)
install.packages('plotly')
install.packages("plotly")
---
library(ggplot2)
library(GGally)
theme_set(theme_bw())
library(magrittr)
library(tidyverse)
library(scales)
library(ggiraph)
library(ggiraphExtra)
library(plotly)
## ----results='asis'-------------------------------------------------------------------------------
dat<- mpg%>%dplyr::count(drv)%>% mutate(prop=n/sum(n)*100)
dat
g<-ggplot(dat,aes(x = drv, tooltip = paste0(round(prop,2),'%'),
data_id = drv, y=prop/100))+
geom_bar_interactive(stat='identity',fill = "cornflowerblue", color="black")+
scale_y_continuous(labels = scales::percent)+
labs(y='Percent',title='Percent of cars in each level of drv')
girafe(print(g))
## ----results='asis'-------------------------------------------------------------------------------
dat<- mpg%>%dplyr::count(drv)%>% mutate(prop=n/sum(n)*100)
dat
g<-ggplot(dat,aes(x = drv, tooltip = paste0(round(prop,2),'%'),
data_id = drv, y=prop/100))+
geom_bar_interactive(stat='identity',fill = "cornflowerblue", color="black")+
scale_y_continuous(labels = scales::percent)+
labs(y='Percent',title='Percent of cars in each level of drv')
runif(1, min=0, max=100)
floor(runif(1, min=1, max=10))
floor(runif(1, min=1, max=3))
floor(runif(1, min=1, max=3))
floor(runif(1, min=1, max=3))
floor(runif(1, min=1, max=2))
floor(runif(1, min=1, max=2))
floor(runif(1, min=1, max=2))
floor(runif(1, min=1, max=2))
floor(runif(1, min=1, max=2))
floor(runif(1, min=1, max=2))
floor(runif(1, min=1, max=2))
floor(runif(1, min=1, max=2))
floor(runif(1, min=1, max=2))
floor(runif(1, min=1, max=2))
runif(1, min=1, max=2)
runif(1, min=1, max=2)
runif(1, min=1, max=2)
runif(1, min=1, max=2)
floor(runif(1, min=1, max=1000))
floor(runif(1, min=1, max=1000))
floor(runif(1, min=1, max=1000))
floor(runif(10, min=1, max=1000))
rm(list=ls())
#set working directory--------------------------------------------------------------------------------------------------
setwd("C:/Users/samjg/Documents/My_Projects/Pgnerosa_histology/RAnalysis/") #set working
# upload data
dat<-read.csv("Data/20190123_male_scoring.csv", header=T, sep=",", na.string="NA", as.is=T)
#set working directory--------------------------------------------------------------------------------------------------
setwd("C:/Users/samjg/Documents/My_Projects/Pgenerosa_histology/RAnalysis/") #set working
# upload data
dat<-read.csv("Data/20190123_male_scoring.csv", header=T, sep=",", na.string="NA", as.is=T)
dat # view data
library(car)
# Load packages and pacage version/date/import/depends info
library(dplyr)          # Version 0.7.6, Packaged: 2018-06-27, Depends: R (>= 3.1.2)Imports: assertthat (>= 0.2.0), bindrcpp (>= 0.2.0.9000), glue (>=1.1.1), magrittr (>= 1.5), methods, pkgconfig (>= 2.0.1), R6(>= 2.2.2), Rcpp (>= 0.12.15), rlang (>= 0.2.0), tibble (>=1.3.1), tidyselect (>= 0.2.3), utils
library(ggplot2)        # Version 2.2.1, Packaged: 2016-12-30, Depends: R (>= 3.1)Imports: digest, grid, gtable (>= 0.1.1), MASS, plyr (>= 1.7.1),reshape2, scales (>= 0.4.1), stats, tibble, lazyeval
library(tidyr)
#set working directory--------------------------------------------------------------------------------------------------
setwd("C:/Users/samjg/Documents/My_Projects/Pgenerosa_histology/RAnalysis/") #set working
# upload data
dat<-read.csv("Data/20190123_male_scoring.csv", header=T, sep=",", na.string="NA", as.is=T)
dat # view data
table <- dat %>% select(c("Treatment", "target_characteristic", "area_.um.3.")) %>%  ddply::group_by(ID)
# Load packages and pacage version/date/import/depends info
library(dplyr)          # Version 0.7.6, Packaged: 2018-06-27, Depends: R (>= 3.1.2)Imports: assertthat (>= 0.2.0), bindrcpp (>= 0.2.0.9000), glue (>=1.1.1), magrittr (>= 1.5), methods, pkgconfig (>= 2.0.1), R6(>= 2.2.2), Rcpp (>= 0.12.15), rlang (>= 0.2.0), tibble (>=1.3.1), tidyselect (>= 0.2.3), utils
table <- dat %>% select(c("Treatment", "target_characteristic", "area_.um.3.")) %>%  ddply::group_by(ID)
table <- dat %>% select(c("Treatment", "target_characteristic", "area_.um.3.")) %>%  dplyr::group_by(ID)
table <- dat %>% select(c("Treatment", "target_characteristic", "area_.um.3.")) %>%  dplyr::group_by("ID")
table
table <- dat %>% select(c("Treatment", "ID","target_characteristic", "area_.um.3.")) %>%  dplyr::group_by("ID")
table
table <- dat %>% dpyr::group_by("ID") %>%  select(c("Treatment", "ID","target_characteristic", "area_.um.3."))
table <- dat %>% dplyr::group_by("ID") %>%  select(c("Treatment", "ID","target_characteristic", "area_.um.3."))
dat
table <- dat %>% dplyr::group_by(ID) %>%  select(c("Treatment", "ID","target_characteristic", "area_.um.3."))
table
table
table <- dat %>% dplyr::group_by(ID) %>%  select(c("Treatment", "ID","target_characteristic", "area_.um.3.")) %>% na.action=na.omit
table <- dat %>%
dplyr::group_by(ID) %>%
dplyr::mutate(VALUE = area_.um.3.[target_characteristic == "Spematozoa+Spermatocytes"] / area_.um.3.[target_characteristic == "Total Area"]) %>%
select(c("Treatment", "ID","target_characteristic", "area_.um.3.", "VALUE"))
table
o = 9636/18460
o
table <- dat %>%
dplyr::group_by(ID) %>%
dplyr::mutate(VALUE = area_.um.3.[target_characteristic == "Spematozoa+Spermatocytes"] / area_.um.3.[target_characteristic == "Total Area"]) %>%
select(c("Treatment", "ID","target_characteristic", "area_.um.3.", "VALUE")) %>%
dplyr::filter(target_characteristic %in% ("Spematozoa+Spermatocytes"))
table # view table
plot <- ggplot(table, aes(x=Treatment, y=VALUE, colour=Treatment, group=Treatment)) +
geom_line() +
theme_bw() +
xlab("Treatment") +
ylab("")
plot
library(ggpubr)
?ggpubr
install.packages('ggpubr')
library(ggpubr)
?ggviolin
plot <- ggviolin(table, aes(x=Treatment, y=VALUE, colour=Treatment, group=Treatment)) +
geom_line() +
theme_bw() +
xlab("Treatment") +
ylab("")
plot <- ggviolin(table, x=Treatment, y=VALUE, colour=Treatment, group=Treatment) +
geom_line() +
theme_bw() +
xlab("Treatment") +
ylab("")
plot <- ggviolin(table, x=Treatment, y=VALUE)
plot <- ggviolin(table, Treatment, VALUE)
table
plot <- ggviolin(table, x = "Treatment", y = "VALUE",  ylab = "% area (Âµm^3)",  fill = "Treatment",
palette = c("#FC4E07", "#00AFBB"),add = "none", title = "Gonad histology (Male)")
plot
plot <- ggviolin(table, x = "Treatment", y = "VALUE",  ylab = "% area (Âµm^3)",  fill = "Treatment",
palette = c("#00AFBB","#FC4E07"),add = "jitter", title = "Gonad histology (Male)")
plot
plot <- ggviolin(table, x = "Treatment", y = "VALUE",  ylab = "% area spermatozoa and spermatocytes (Âµm^3)",  fill = "Treatment",
palette = c("#00AFBB","#FC4E07"),add = "jitter", title = "Gonad histology (Male)")
plot
plot <- ggviolin(table, x = "Treatment", y = "VALUE",  ylab = "% area spermatozoa and spermatocytes (Âµm^3)",  fill = "Treatment",
palette = c("#00AFBB","#FC4E07"),add = "none", title = "Gonad histology (Male)")
plot_box_violin <- plot %>% ggadd(c("boxplot", "jitter"),shape ="Treatment", fill = "white")
plot_box_violin
plot_box_violin <- plot %>% ggadd(c("boxplot", "jitter"),shape ="Treatment", size = 5,fill = "white")
plot_box_violin
plot_box_violin <- plot %>% ggadd(c("boxplot", "jitter"),shape ="Treatment", size = 2,fill = "white")
plot_box_violin
plot_box_violin <- plot %>% ggadd(c("boxplot", "jitter"),shape ="Treatment",fill = "white")
plot_box_violin
plot_box_violin <- plot %>% ggadd("boxplot"),shape ="Treatment",fill = "white") %>% ggadd("jitter"), size = 3 shape ="Treatment",fill = "white")
plot_box_violin <- plot %>% ggadd(c("boxplot"),shape ="Treatment",fill = "white") %>% ggadd(c("jitter"), size = 3 shape ="Treatment",fill = "white")
plot_box_violin
plot_box_violin <- plot %>% ggadd("boxplot",shape ="Treatment",fill = "white") %>% ggadd("jitter",shape ="Treatment",fill = "white")
plot_box_violin
plot_box_violin <- plot %>% ggadd("boxplot",shape ="Treatment",fill = "white") %>% ggadd("jitter", size = 4,shape ="Treatment",fill = "white")
plot_box_violin
ggsave(file="Output/Acini_area_plot.pdf", plot_box_violin, width = 12, height = 8, units = c("in")) # respiration rate plots
plot <- ggviolin(table, x = "Treatment", y = "VALUE",  ylab = "% area spermatozoa and spermatocytes (Âµm^3)",  fill = "Treatment",
palette = c("#00AFBB","#FC4E07"), add = "none", title = "Gonad histology (Male; sample 20190123)")
plot_box_violin <- plot %>% ggadd("boxplot",shape ="Treatment",fill = "white") %>% ggadd("jitter", size = 4,shape ="Treatment",fill = "white")
plot_box_violin
plot <- ggviolin(table, x = "Treatment", y = "VALUE",  ylab = "% area spermatozoa and spermatocytes (Âµm^3)",  fill = "Treatment",
palette = c("#00AFBB","#FC4E07"), add = "none", title = "Gonad histology (Male; samples from 20190123)")
plot_box_violin <- plot %>% ggadd("boxplot",shape ="Treatment",fill = "white") %>% ggadd("jitter", size = 4,shape ="Treatment",fill = "white")
plot_box_violin
ggsave(file="Output/Acini_area_plot.pdf", plot_box_violin, width = 12, height = 8, units = c("in")) # save plot
?t.test
#  STAT
t.test(table$Treatment, table$VALUE)
table
#  STAT
table$Treatment.num <- as.numeric(table$Treatment)
#  STAT
table$Treatment.num <- as.numeric(table$Treatment)
t.test(table$Treatment.num, table$VALUE)
table
#  STAT
table$Treatment.num <- table$Treatment
table$Treatment.num <- as.numeric(table$Treatment.num)
table
#  STAT
table$Treatment.num <- as.factor(table$Treatment)
table$Treatment.num <- as.numeric(table$Treatment.num)
table
t.test(table$Treatment.num, table$VALUE)
?aov
mod<- aov(VALUE  ~ Treatment = table)
mod<- aov(VALUE  ~ Treatment, data = table)
summary(mod)
mod<- aov(VALUE  ~ Treatment.num, data = table)
summary(mod)
t.test(table$Treatment.num, table$VALUE) # significatly differnt
t.test(table$VALUE~table$Treatment.num) # significatly differnt
#  STAT
table$Treatment.num <- as.factor(table$Treatment)
table$Treatment.num <- as.numeric(table$Treatment.num)
t.test(table$VALUE~table$Treatment.num) # not different! t = 0.47357, df = 6.4737, p-value = 0.6514
#  SAVE
ggsave(file="Output/Acini_area_plot.pdf", plot_box_violin, width = 12, height = 8, units = c("in")) # save plot
#  SAVE
ggsave(file="Output/Acini_area_plot.pdf", plot_box_violin, width = 12, height = 8, units = c("in")) # save plot
